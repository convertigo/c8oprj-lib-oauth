↑convertigo: 8.0.0.m006
↓lib_OAuth [core.Project]: 
  comment: |
    'OAuth/OpenID library to perform authentication.
    This library works in Conjunction with the Ngx Client Action [OAuth/OpenID](https://doc.convertigo.com/documentation/latest/reference-manual/convertigo-objects/mobile-application/components/action-components/oauth-openid)
    
    ## Symbols
    OAuth works in conjunction with applications declared in the providers API portals. Please refer to the documentation fo each provider for details. When you declare an application, the portal will provide you with various IDs you will be able to configure in the following symbols.
    
    |Symbol    | Comment           |
    |----------|-------------------|
    |lib_oauth.google.clientid    | The Google client id of your registered app on Google API portal           |
    |lib_oauth.google.keysecret.secret    | The Google secret key of your registered app           |
    |lib_oauth.azuread.clientid    | The Azure client id of your registered app on Microsoft Application Registration Portal (https://apps.dev.microsoft.com)    |
    |lib_oauth.azuread.tenantid    | The optional Azure tenant id you will find in the same portal           |
    |lib_oauth.linkedin.clientid    | The linkedIn client id you will find the LinkedIn API portal (https://www.linkedin.com/secure/developer?newapp           |
    |lib_oauth.linkedin.keysecret.secret    | The linkedIn secret key you will find in the same portal           |
    
    Here is how to set up the project for the different login providers:
    - **Google**
        1. Log in to https://console.developers.google.com
        2. Create a **NEW PROJECT**.
        3. Go to **Credentials > Create credentials > OAuth client ID**
        4. Select **Web application**
        5. Choose a name for your *OAuth client ID*
        6. Add **Authorised JavaScript origins** like:
            - http://localhost:18080 for testing with your local Studio
            - https://c8ocloud.convertigo.net
        7. Add following **Authorised redirect URIs**:
            - https://c8ocloud.convertigo.net/convertigo/projects/libOAuth/getTokenGoogle.html
            
    
    - **LinkedIn**
        1. Log in to https://linkedin.com/developers
        2. Go to **My Apps > Create app**
        3. Fill in the form to create your application.
        4. Go to **Auth > Application credentials**
            - Copy **Client ID** and **Client Secret** keys to Convertigo Symbols
        5. Go to **Auth > OAuth 2.0 settings** and set Redirect URLs:
            - https://c8ocloud.convertigo.net/convertigo/projects/libOAuth/getTokenlinkedIn.html
    
    - **Azure**
        1. Log in to https://portal.azure.com
        2. Go to **All Services > Azure Active Directory > App registrations**
        3. Click **New registration**.
            - Choose a name.
            - In **Supported account types**, select Single or Multi tenant.
            - In **Redirect URI (optional)**, select **Public client/native**
            - Type in https://c8ocloud.convertigo.net/convertigo/projects/libOAuth/getToken.html
            - Click **Register**
        4. Click your project name:
            - Go to **Authentication > Advanced settings** and check **Access tokens** and **ID tokens**
            - Copy **Application (client) ID** and **Directory (tenant) ID** keys to Convertigo Symbols
            
            '
  version: 7.9.0
  ↓GoogleOAuth [connectors.HttpConnector]: 🗏 connectors/GoogleOAuth.yaml
  ↓LinkedInApi [connectors.HttpConnector]: 🗏 connectors/LinkedInApi.yaml
  ↓LinkedInOAuth [connectors.HttpConnector]: 🗏 connectors/LinkedInOAuth.yaml
  ↓MicrosoftGraphApi [connectors.HttpConnector]: 🗏 connectors/MicrosoftGraphApi.yaml
  ↓checkAccessOpenID [sequences.GenericSequence]: 🗏 sequences/checkAccessOpenID.yaml
  ↓checkAccessToken [sequences.GenericSequence]: 🗏 sequences/checkAccessToken.yaml
  ↓checkAccessTokenGoogle [sequences.GenericSequence]: 🗏 sequences/checkAccessTokenGoogle.yaml
  ↓checkAccessTokenLinkedIn [sequences.GenericSequence]: 🗏 sequences/checkAccessTokenLinkedIn.yaml
  ↓GetOAuthCredentials [sequences.GenericSequence]: 🗏 sequences/GetOAuthCredentials.yaml
  ↓loginAzureAdWithAccessToken [sequences.GenericSequence]: 🗏 sequences/loginAzureAdWithAccessToken.yaml
  ↓loginGoogleWithCode [sequences.GenericSequence]: 🗏 sequences/loginGoogleWithCode.yaml
  ↓loginLinkedInWithCode [sequences.GenericSequence]: 🗏 sequences/loginLinkedInWithCode.yaml
  ↓SignOut [sequences.GenericSequence]: 🗏 sequences/SignOut.yaml